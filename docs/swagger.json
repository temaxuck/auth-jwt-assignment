{
    "swagger": "2.0",
    "info": {
        "description": "JWT Authentication Assignment API",
        "title": "Authentication JWT API",
        "contact": {
            "name": "Artem Darizhapov",
            "email": "gorropand@gmail.com"
        },
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/auth/{guid}/login": {
            "post": {
                "description": "Issues JWT token pair and sets them as cookies",
                "tags": [
                    "auth"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User GUID",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/auth/{guid}/logout": {
            "post": {
                "description": "Deauthorizes user",
                "tags": [
                    "auth"
                ],
                "summary": "Logout user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User GUID",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/auth/{guid}/refresh": {
            "post": {
                "description": "Refreshes access and refresh tokens if the refresh token is valid. Deauthorizes user if the user agent does not match.",
                "tags": [
                    "auth"
                ],
                "summary": "Refresh tokens",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User GUID",
                        "name": "guid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/security/refresh-new-ip": {
            "post": {
                "description": "Demo endpoint for IP change notifications",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "security"
                ],
                "summary": "Security notification webhook",
                "parameters": [
                    {
                        "description": "Notification payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/whoami": {
            "get": {
                "description": "Returns authenticated user GUID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get current user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    }
}